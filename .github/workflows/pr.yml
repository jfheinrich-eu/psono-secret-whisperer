name: Release Info
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [labeled, unlabeled, opened, edited, reopened, synchronize, ready_for_review]
    branches:
      - develop

jobs:
  generate-pr-description:
    name: Generate the description on the pull request
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate PR Description from Conventional Commits
        id: pr-description
        run: |
          # Get all commits in the PR
          commits=$(git log --pretty=format:"%H|%s" origin/${{ github.event.pull_request.base.ref }}..${{ github.event.pull_request.head.sha }})

          # Initialize categories
          features=""
          fixes=""
          docs=""
          chore=""
          deps=""
          other=""

          # Process each commit
          while IFS='|' read -r hash message; do
            if [[ $message =~ ^feat(\(.+\))?: ]]; then
              features="$features- $message\n"
            elif [[ $message =~ ^fix(\(.+\))?: ]]; then
              fixes="$fixes- $message\n"
            elif [[ $message =~ ^docs(\(.+\))?: ]]; then
              docs="$docs- $message\n"
            elif [[ $message =~ ^chore(\(.+\))?: ]]; then
              chore="$chore- $message\n"
            elif [[ $message =~ ^(build|deps)(\(.+\))?: ]]; then
              deps="$deps- $message\n"
            else
              other="$other- $message\n"
            fi
          done <<< "$commits"

          # Build changelog
          changelog=""

          if [[ -n "$features" ]]; then
            changelog="$changelog## 🚀 Features\n$features\n"
          fi

          if [[ -n "$fixes" ]]; then
            changelog="$changelog## 🐛 Bug Fixes\n$fixes\n"
          fi

          if [[ -n "$docs" ]]; then
            changelog="$changelog## 📚 Documentation\n$docs\n"
          fi

          if [[ -n "$deps" ]]; then
            changelog="$changelog## ⬆️ Dependencies\n$deps\n"
          fi

          if [[ -n "$chore" ]]; then
            changelog="$changelog## 🧹 Chore\n$chore\n"
          fi

          if [[ -n "$other" ]]; then
            changelog="$changelog## 🔧 Other Changes\n$other\n"
          fi

          # Set output with proper escaping
          {
            echo "changelog<<EOF"
            echo -e "$changelog"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Update pull request body
        uses: riskledger/update-pr-description@v2
        with:
          body: |
            # Task

            ${{ github.event.pull_request.title }}

            # Description

            <!--- START AUTOGENERATED NOTES --->
            ${{ steps.pr-description.outputs.changelog }}
            <!--- END AUTOGENERATED NOTES --->

            # Demo

            # Checklist

            - [ ] I have performed a self-review of my own code
            - [ ] I have added tests to cover my changes
          token: ${{ secrets.GITHUB_TOKEN }}
